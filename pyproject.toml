[tool.poetry]
name = "fractopo"
version = "0.7.0"
description = "Fracture Network Analysis"
authors = ["nialov <nikolasovaskainen@gmail.com>"]
readme = "README.rst"
license = "MIT"
# Make sure hyphens/underscores are correct in urls
homepage = "https://github.com/nialov/fractopo"
repository = "https://github.com/nialov/fractopo"
documentation = "https://nialov.github.io/fractopo/"
# For inspiration: https://pydigger.com/keywords
keywords = [
    "data",
    "gis",
    "geology",
    "fracture",
    "topology",
]
# See https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: GIS",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3 :: Only"
]
include = ["CHANGELOG.md"]

[tool.poetry.scripts]
fractopo = "fractopo.__main__:APP"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/nialov/fractopo/issues"

# Changes here should be kept in sync with ./environment.yml
[tool.poetry.dependencies]
python = ">=3.9,<3.13"
click = "*"
geopandas = ">=1.0.0"
joblib = ">=1.2.0"
matplotlib = ">=3.5.3"
numpy = ">=1.26.0,<2.0.0"
pandas = ">=2.1.0,<3.0.0"
powerlaw = "*"
python-ternary = "*"
rich = ">=11.0.0"
scikit-learn = "*"
scipy = ">=1.9.1"
seaborn = "*"
shapely = ">=2.0.0,<3.0.0"
typer = ">=0.4"
pyproj = ">=3.6.0"

[tool.poetry.dev-dependencies]
codespell = "^2.2.2"
cogapp = "^3.3.0"
coverage = "^6.5.0"
hypothesis = "*"
ipython = "*"
json5 = "*"
jupyterlab = "*"
nbstripout = "^0.6.1"
nox = "*"
pre-commit = "*"
pyinstrument = "*"
pytest = "*"
pytest-regressions = ">=2.2.0,<3.0.0"
toml = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths =[
    "tests",
    "fractopo",
    ]
addopts = "--doctest-modules"
doctest_optionflags =[
    "NUMBER",
    "NORMALIZE_WHITESPACE",
    ]

filterwarnings =[
    "error",
    "ignore:The Shapely:UserWarning:geopandas",
    "ignore:No data for colormapping provided:UserWarning",
    "ignore:invalid value encountered in divide:RuntimeWarning:powerlaw",
    "ignore:divide by zero encountered in divide:RuntimeWarning:powerlaw",
    "ignore:overflow encountered in divide:RuntimeWarning:powerlaw",
    "ignore:The behavior of :FutureWarning",
    "ignore:In a future version, :FutureWarning",
    "ignore:More than 20 figures have been opened:RuntimeWarning",
    "ignore:the convert_dtype parameter is deprecated and will be removed in a future version:FutureWarning",
    "ignore:is_categorical_dtype is deprecated and will be removed in a future version:FutureWarning",
    "ignore:is_categorical_dtype is deprecated and will be removed in a future version:DeprecationWarning",
    "ignore:'GeoSeries.swapaxes' is deprecated and will be removed in a future version:FutureWarning",
    "ignore:\\nPyarrow will become a required dependency of pandas:DeprecationWarning",
    "ignore:invalid value encountered in",
    # joblib >=1.2.0 upstream issues
    "ignore:ast.Num is deprecated and will be removed in Python 3.14; use ast.Constant instead:DeprecationWarning",
    "ignore:Attribute n is deprecated and will be removed in Python 3.14; use value instead:DeprecationWarning",
    ]

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["fractopo", "tests"]

[tool.pylint.master]
fail-under = "9.5"
ignore = ["examples"]

[tool.pylint.report]
output-format = "text"

[tool.pylint.messages_control]
max-line-length = 100
disable = [
    "C0103",
    "C0302",
    "R0902",
    "R0913",
    "R0914",
    "R1735",
    "W0212",
    "W0621",
    "W0703",
    "W1203",
    ]

[tool.pylint.similarities]
ignore-imports = true

[tool.codespell]
ignore_words_list = [
    "theses"
]

[tool.ruff]
extend-include = ["*.ipynb"]
lint.ignore = ["E402"]
