name: test-tmp-dir

on:
  # run on all pushes to any branch
  push:
  # run only on master pull requests
  pull_request:
    branches: [master]

jobs:
  test-tmp-dir:
    name: Test and check coverage of 🐍 code
    strategy:
      matrix:
        python-version: ["38", "39", "310"]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Cache poetry cache-dir
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-${{ hashFiles('poetry.lock') }}-${{ hashFiles('flake.lock') }}-${{ matrix.python-version }}
      - name: Test with doit -> nix
        run: |
          nix develop -c doit -v 3 test_tmp_dir:python${{ matrix.python-version }}

  doit:
    name: Run auxiliary doit tasks to lint and make docs & citation.
    strategy:
      matrix:
        # python-version: ["39"]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    needs: [test-tmp-dir]
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v17
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Cache poetry cache-dir
        uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-${{ hashFiles('poetry.lock') }}-${{ hashFiles('flake.lock') }}-${{ hashFiles('flake.nix') }}
      - name: Cache .nox and .doit.db
        uses: actions/cache@v3
        with:
          # We can cache .doit.db and it will be significant as
          # most doit util tasks are run here in the same github actions job
          path: |
            .nox
            .doit.db
          key: "\
            ${{ runner.os }}-\
            ${{ env.pythonLocation }}-\
            nox-\
            ${{ hashFiles('noxfile.py') }}-\
            ${{ hashFiles('poetry.lock') }}-\
            ${{ hashFiles('flake.lock') }}-\
            ${{ hashFiles('flake.nix') }}-\
            "
      - name: Run commands
        # These could be better parallelized with a matrix
        # but as some tasks are dependent on others it is
        # (probably) more efficient to run all here
        # (more efficient for github.com at least)
        run: |
          nix develop -c poetry install
          nix develop -c poetry run doit pre_commit lint docs citation build
      - name: Publish distribution 📦 to PyPI on tagged commit pushes
        # Publish to PyPI on tagged commit pushes on master
        if: >
          github.event_name == 'push'
          && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}

  release:
    runs-on: ubuntu-latest
    needs: [test-tmp-dir, doit]
    name: Release on GitHub
    steps:
      - uses: actions/checkout@v3
      - name: Create incremental changelog
        run: >
          cat CHANGELOG.md
          | sed -n '1,/github/p'
          > RELEASE_CHANGELOG.md

      - name: Echo RELEASE_CHANGELOG.md
        run: cat RELEASE_CHANGELOG.md

      - name: Publish release on GitHub
        if: >
          github.event_name == 'push'
          && startsWith(github.ref, 'refs/tags')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            CHANGELOG.md
          body_path: RELEASE_CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
